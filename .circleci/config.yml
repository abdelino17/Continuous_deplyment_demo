version: 2.1

commands:
  destroy_cloudformation:
    description: "Delete CloudForamtion"
    steps:
      - run: aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
          # when: on_fail

jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        # - destroy_cloudformation

  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["0a:3e:c9:a8:52:24:fe:93:55:0f:d6:fe:28:4a:4c:b2"]
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
            
      - run:
          name: Debug
          command: |
            ls ~/.ssh
            
      - run:
          name: Configure server
          command: |
            export DEFAULT_PRIVATE_KEY_FILE=~/.ssh/id_rsa_0a3ec9a85224fe93550fd6fe284a4cb2
            echo $DEFAULT_PRIVATE_KEY_FILE
            cat $DEFAULT_PRIVATE_KEY_FILE
            ssh -i  $DEFAULT_PRIVATE_KEY_FILE ubuntu@ec2-44-204-136-56.compute-1.amazonaws.com
            ansible-playbook -i inventory.txt main.yml

  say-hello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      # - create_infrastructure
      - configure_infrastructure
